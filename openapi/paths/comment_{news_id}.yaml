get:
  tags:
    - Comment
  summary: Get all comments for news with news_id
  operationId: getAllComments
  parameters:
    - name: news_id
      in: path
      description: The news_id which comments need to be fetched
      required: true
      schema:
        $ref: ../components/schemas/entities/BigintId.yaml
    - name: offset
      in: query
      required: false
      schema:
        $ref: ../components/schemas/entities/Offset.yaml
    - name: limit
      in: query
      required: false
      schema:
        $ref: ../components/schemas/entities/Limit.yaml
  responses:
    "200":
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/responses/Comment-Paginated.yaml
    "400":
      $ref: ../components/responses/Error.yaml

post:
  tags:
    - Comment
  summary: Add comment for news_id
  operationId: addComment
  parameters:
    - name: news_id
      in: path
      description: The news_id for that comment needs to be added
      required: true
      schema:
        $ref: ../components/schemas/entities/BigintId.yaml
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/Comment-POST.yaml

  responses:
    "200":
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/responses/Comment.yaml
    "400":
      $ref: ../components/responses/Error.yaml

delete:
  tags:
    - Comment
  summary: Delete comment with comment_id
  operationId: deleteComment
  parameters:
    - name: news_id
      in: path
      description: The comment_id that needs to be removed
      required: true
      schema:
        $ref: ../components/schemas/entities/BigintId.yaml

  responses:
    "200":
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/responses/Message-Response.yaml
    "400":
      $ref: ../components/responses/Error.yaml
